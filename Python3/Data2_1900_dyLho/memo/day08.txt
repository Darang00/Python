0. 복습

데이터 프레임(DataFrame)
- 2차원 리스트를 매개변수로 전달함
- values(데이터 값), index(행 인덱스), columns(열 제목)
- 행과 열은 지정하지 않으면 0부터 시작하는 정수값이 들어간다.

import pandas as pd
 
if = pd.DataFrame(values, index = 행제목, columns = 열제목)

행 선택(loc, iloc)
- df.loc[행이름]
- df.iloc[행 인덱스번호]

- 행 이름으로 슬라이싱: df.loc[[행이름1, 행이름2]]
- 인덱스로 슬라이싱 : df.iloc[1:3]

열 선택
- df[열 이름]
- df.열이름 (열 이름이 문자열인 경우만 사용 가능)
- df[[열이름1, ...]]

원소 선택
- 인덱스 이름: df.loc[행 이름, 열이름]
- 정수 위치 인덱스: df.iloc[행 idx, 열 idx]



1. 행 인덱스(이름) / 열 이름 설정
- 행 인덱스 변경: df.index = 새로운 행 인덱스 배열
- 열 이름 변경: df.columns = 새로운 열 인덱스 배열
- 일부 행 인덱스 변경: df.rename(index = {기존 인덱스: 새 인덱스, ...})
- 일부 열 인덱스 변경: df.rename(columns = {기존 열 이름: 새 열 이름, ...})

2. 행/열 추가
- 열 추가: 딕셔너리의 키값과 똑같은 역할이다. 키 값이 열 제목(colunm 명)이 된다.
	df["추가할 열 이름"] = 데이터 
- 행 추가: df.loc["추가할 행 이름"] (행 추가능 iloc로 안됨)


3. 행/열 삭제
- 데이터 프레임의 행 또는 열을 삭제하는 메서드 df.drop()
- 행 삭제: df.drop(행 idx or 행 이름, axis = 0)
- 열 삭제: df.drop(열 idx or 열 이름, axis = 1)

4. 데이터 프레임 정렬
- df.sort_index(): 행 인덱스 기준으로 정렬
- 옵션: ascending = True (오름차순), ascending = False (내림차순)
- axis = 1 옵션을 설정하면 열 인덱스 기준으로 정렬
- 특정 열의 데이터를 기준으로 정렬
	1) df.sort_values()
	2) by = '열이름' 옵션: 해당 열 데이터를 기준으로 정렬한다.


5. 데이터 프레임 연산
- 시리즈와 동일하다
- 데이터프레임 객체 + 연산자 + 숫자 => 개별 원소 별로 연산됨
- 데이터프레임 객체 + 연산자 + 데이터프레임 객체 => 같은 행과 열을 가진 원소끼리 연산됨
- 연산을 하는 데이터프레임끼리 원소의 개수가 다르거나 행과 열을 짝지을 수 없는 경우
 => 정상적인 연산을 할 수 없음, NaN 으로 처리됨
- 행과 열의 짝이 맞아도 한쪽의 데이터값이 NaN이라면 NaN으로 처리됨
-> 해결방법: 연산 메서드와 fill_value 속성을 사용한다.
	(pandas 연산 메서드: df.add(), df.sub(), ...)





















